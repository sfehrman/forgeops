kind: PodSecurityPolicy
apiVersion: extensions/v1beta1
metadata:
  name: forgerock-default-policy
  annotations:
    description: |
        limit container to run defined by the runAsUser in the container template
        required by AM and DS applications
spec:
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  requiredDropCapabilities:
    - ALL
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 11111
        max: 11111
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 11111
        max: 11111
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
---
kind: PodSecurityPolicy
apiVersion: extensions/v1beta1
metadata:
  name: forgerock-webserver-policy
  annotations:
    description: |
     allows nginx to run as root and setuid to http user
     drops most commonly not required seccomp capabilities
     https://www.redhat.com/en/blog/secure-your-containers-one-weird-trick
     A few of the seccomp capabilities aren't dropped that are suggested due to
     nginx using those syscalls
spec:
  privileged: false
  allowPrivilegeEscalation: false
  runAsUser:
    rule: MustRunAs
    ranges:
      - min: 101
        max: 101
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: MustRunAs
    ranges:
      - min: 101
        max: 101
  fsGroup:
    rule: MustRunAs
    ranges:
      - min: 101
        max: 101
  requiredDropCapabilities:
  - DAC_OVERRIDE
  - AUDIT_WRITE
  - FSETID
  - SYS_CHROOT
  - FSETID
  - SETPCAP
  - NET_RAW
  - SETFCAP
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - persistentVolumeClaim
  - projected
  - secret
